# Fuel Flow Rate - Dimension-Reduction - PCA

## Importing the Libraries

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

## Loading the dataset

Fuelflow=pd.read_csv(r"F:\\PCA end to end\\fuel flow rate_example.csv")

## Checking the shape of data

Fuelflow.shape

## Checking the Information

Fuelflow.info()

## Checking the Describe

Fuelflow.describe()

## Droping the unImp column

Fuelflow=Fuelflow.drop('Flight_instance_ID',axis=1)

## Checking the Missing Values

Fuelflow.isnull().sum()

## segregating the Non - numeric col 

numeric_features = Fuelflow.select_dtypes(exclude=['object']).columns
numeric_features

## Scaling

#creating pipeline
scale_pipeline=Pipeline([
    ('scale_data', StandardScaler())
])


preprocess_pipeline = ColumnTransformer([('scale',scale_pipeline,numeric_features)], remainder = 'passthrough')

processed = preprocess_pipeline.fit(Fuelflow)


import pickle
import joblib

## Using Joblib to save the file

joblib.dump(processed, "pca_preprocess")

Fuelflow1 = pd.DataFrame(processed.transform(Fuelflow))

Fuelflow1


## PCA


pca = PCA().fit(Fuelflow1)
plt.plot(np.cumsum(pca.explained_variance_ratio_))
plt.xlabel('number of components')
plt.ylabel('cumulative explained variance')

## pip install kneed

List = []

for k in range(3, 20):#this range is optional
    pca = PCA(n_components = k) 
    pca.fit(ff_normalized)
    List.append(pca.inertia_)


from kneed import KneeLocator
kl = KneeLocator(range(3, 20), List, curve="convex", direction="increasing")
kl.elbow
plt.style.use("seaborn")
plt.plot(range(3, 20), List)
plt.xticks(range(3, 20))
plt.ylabel("variance_ratio")
plt.axvline(x=kl.elbow, color='r', label='axvline - full height', ls='--')
plt.show()


List.append(np.cumsum(pca.explained_variance_ratio_))

pca = PCA().fit(Fuelflow1)


import matplotlib.pyplot as plt
%matplotlib inline
plt.rcParams["figure.figsize"] = (12,6)

fig, ax = plt.subplots()
xi = np.arange(1, 226, step=1)
y = np.cumsum(pca.explained_variance_ratio_)

plt.ylim(0,1)
plt.plot(xi, y, marker='o', linestyle='--', color='b')

plt.xlabel('Number of Components')
plt.xticks(np.arange(0, 226, step=20)) #change from 0-based array index to 1-based human-readable label
plt.ylabel('cumulative explained variance')
plt.title('The number of components needed to explain variance')

plt.axhline(y=0.95, color='r', linestyle='-')
plt.text(0.5, 0.85, '95% cut-off threshold', color = 'red', fontsize=16)

ax.grid(axis='x')
plt.show()

pca = PCA(n_components = 40)

ff_principal = pca.fit(Fuelflow1)

## saving pca

pickle.dump(ff_principal, open('pca_model.pkl','wb'))

ff_principal=pd.DataFrame(ff_principal.transform(Fuelflow1))

ff_principal.columns = ['P01', 'P02' , 'P03' , 'P04' , 'P05', 'P06' , 'P07' , 'P08' , 'P09', 'P10' , 'P11' , 'P12' ,  'P13', 'P14' , 'P15' , 'P16' , 'P17', 'P18' , 'P19' , 'P20' , 'P21', 'P22' , 'P23' , 'P24' , 'P25', 'P26' , 'P27' , 'P28' ,'P29', 'P30' , 'P31' , 'P32' , 'P33', 'P34' , 'P35' , 'P36' , 'P37', 'P38' , 'P39' , 'P40']

print(ff_principal.head())

